#!/usr/bin/env bash

set -e

CURRENT_DIR="$(pwd)"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]:-${0}}")" || exit 1; pwd -P)"
ROOT_DIR="$(cd "${SCRIPT_DIR}/.." || exit 1; pwd -P)"
CONFIG_DIR="${ROOT_DIR}/config"

#### UTILS: SCRIPT CLEANUP ####

declare -a on_exit_items

function on_exit() {
  for i in "${on_exit_items[@]}"; do
    eval $i
  done
}

function add_on_exit() {
  local -r n=${#on_exit_items[*]}
  on_exit_items[$n]="$*"
  # set the trap only the first time
  if [[ $n -eq 0 ]]; then
    trap on_exit EXIT
  fi
}

#### UTILS: ERRORS ####

error_exit() {
  echo "${PROGNAME}/ERROR: ${1:-"Unknown Error"}" 1>&2
  exit 1
}

#### UTILS: CHECKSUMS ####

verify() {
    local type=$1
    local hash=$2
    local file=$3
    echo "$hash $file" | ${type}sum --check > /dev/null
}

#### MAIN ####

# DigiCert TLS Hybrid ECC SHA384 2020 CA1
# https://www.digicert.com/kb/digicert-root-certificates.htm
# Used by:
#   github.com
update_digicert() {
    local tmp_dir="$(mktemp -d /tmp/tmp.XXXXXX)"
    local dest_dir="${ROOT_DIR}/certs"
    add_on_exit rm -rf "${tmp_dir}"
    local crt_name="DigiCertTLSHybridECCSHA3842020CA1-1.crt"
    local crt_sha1="aec13cdd5ea6a3998aec14ac331ad96bedbb770f"
    local crt_sha256="f7a9a1b2fd964a3f2670bd668d561fb7c55d3aa9ab8391e7e169702db8a3dbcf"

    cd "${tmp_dir}"
    wget --quiet "https://cacerts.digicert.com/${crt_name}"

    if ! verify sha1 $crt_sha1 $crt_name; then
        error_exit "sha1 doesn't match"
    fi

    if ! verify sha256 $crt_sha256 $crt_name; then
        error_exit "sha256 doesn't match"
    fi

    mkdir -p "${dest_dir}"
    openssl x509 -text -inform DER -outform PEM -in "${crt_name}" -out "${dest_dir}/${crt_name}.pem"
}

main() {
    update_digicert
}

main "$@"
